@page "/authors/edit/{id}"
@attribute [Authorize(Roles = "Administrator")]
@inject IAuthorRepository authorRepo_
@inject NavigationManager navManager_
<h3 class="card-title">Edit Authors</h3>
<br />
<hr />
<br />
@if (isFailed)
{
    <ErrorMessage Message="Something went wrong while updating Author." />
}

@if (Model == null)
{
    <LoadingMessage Message="Loading Authors for Editing" />
}
else
{
    <EditForm Model="Model" OnValidSubmit="EditAuthor">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="firstname">First Name</label>
            <InputText @bind-Value="Model.FirstName" class="form-control" id="firstname" />
        </div>
        <div class="form-group">
            <label for="lastname">Last Name</label>
            <InputText @bind-Value="Model.LastName" class="form-control" id="lastname" />
        </div>
        <div class="form-group">
            <label for="bio">Biography</label>
            <InputTextArea @bind-Value="Model.Bio" class="form-control" id="bio" />
        </div>
        <button class="btn btn-primary" type="submit">
            <span class="oi oi-pencil"></span>
            Submit Changes
        </button>
        <button @onclick="BackToList" class="btn btn-outline-secondary">
            <span class="oi oi-arrow-left"></span>
            Back To List
        </button>
    </EditForm>
}

@code {
    [Parameter]
    public string Id { get; set; }
    private Author Model = new Author();
    private bool isFailed = false;
    protected override async Task OnInitializedAsync()
    {
        int id = int.Parse(Id);
        Model = await authorRepo_.Get(EndPoints.AuthorsEndpoint, id);
    }
    private async Task EditAuthor()
    {
        int id = int.Parse(Id);
        bool success = await authorRepo_.Update(EndPoints.AuthorsEndpoint, Model, Model.Id);
        if (success)
            BackToList();
        else
            isFailed = true;
    }
    private void BackToList()
    {
        navManager_.NavigateTo("/authors/");
    }
}
